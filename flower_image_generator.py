# -*- coding: utf-8 -*-
"""flower_image_generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GF07HYA3FpAWuwF46WBRtCzg1FsKcv2O
"""

# STEP 1: Installations
!pip install diffusers transformers accelerate scipy safetensors --quiet
!pip install ipywidgets --quiet

# STEP 2: Imports
from diffusers import StableDiffusionPipeline
import torch
from IPython.display import display, HTML
import ipywidgets as widgets
import random
import base64
from io import BytesIO

# STEP 3: Setup pipeline
device = "cuda" if torch.cuda.is_available() else "cpu"
dtype = torch.float16 if device == "cuda" else torch.float32

pipe = StableDiffusionPipeline.from_pretrained(
    "runwayml/stable-diffusion-v1-5",
    torch_dtype=dtype,
)
pipe = pipe.to(device)

# STEP 4: Flower fun facts
flower_facts = {
    "rose": "Roses can live for a very long time â€” some over 1,000 years!",
    "lotus": "Lotuses are symbols of purity and rebirth in many cultures.",
    "sunflower": "Sunflowers follow the sun in a process called heliotropism.",
    "lavender": "Lavender is known for its calming scent and purple beauty.",
    "orchid": "There are over 25,000 species of orchids!",
    "tulip": "Tulips were once more valuable than gold in the 1600s!",
    "lily": "Lilies symbolize purity and devotion."
}

# STEP 5: UI Elements
flower_input = widgets.Text(
    value='Rose',
    placeholder='Enter flower name...',
    description='Flower:',
    layout=widgets.Layout(width='100%')
)

style_dropdown = widgets.Dropdown(
    options=["Realistic", "Cartoon", "Oil Painting"],
    value="Realistic",
    description="Style:"
)

count_slider = widgets.IntSlider(
    value=2,
    min=1,
    max=4,
    step=1,
    description='Images:',
    continuous_update=False
)

generate_btn = widgets.Button(description="Generate", button_style='success')
output_box = widgets.Output()

# STEP 6: Helper to convert to download link
def create_download_link(image, filename="flower.png"):
    buffered = BytesIO()
    image.save(buffered, format="PNG")
    img_str = base64.b64encode(buffered.getvalue()).decode()
    href = f'<a download="{filename}" href="data:image/png;base64,{img_str}" target="_blank">ðŸ“¥ Download Image</a>'
    return href

# STEP 7: Generation logic
def generate_images(b):
    output_box.clear_output()
    flower = flower_input.value.strip().lower()
    style = style_dropdown.value
    count = count_slider.value

    base_prompt = f"A {style.lower()} image of a {flower} flower"
    fact = flower_facts.get(flower.lower(), "This flower is beautiful and unique!")

    with output_box:
        display(HTML(f"<h3>ðŸŒ¸ {flower.title()} in {style} Style</h3>"))
        display(HTML(f"<p><b>Fun Fact:</b> {fact}</p>"))

        for i in range(count):
            image = pipe(base_prompt).images[0]
            display(image)

            # Add download link
            link = create_download_link(image, filename=f"{flower}_{i+1}.png")
            display(HTML(link))

# Bind
generate_btn.on_click(generate_images)

# STEP 8: Display UI
display(widgets.VBox([flower_input, style_dropdown, count_slider, generate_btn, output_box]))